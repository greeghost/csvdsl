/*
 * generated by Xtext 2.28.0
 */
grammar InternalCsvDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.first.csvdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.first.csvdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.first.csvdsl.services.CsvDslGrammarAccess;

}
@parser::members {
	private CsvDslGrammarAccess grammarAccess;

	public void setGrammarAccess(CsvDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getStatementAssignment()); }
		(rule__Model__StatementAssignment)*
		{ after(grammarAccess.getModelAccess().getStatementAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCsvOperation
entryRuleCsvOperation
:
{ before(grammarAccess.getCsvOperationRule()); }
	 ruleCsvOperation
{ after(grammarAccess.getCsvOperationRule()); } 
	 EOF 
;

// Rule CsvOperation
ruleCsvOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCsvOperationAccess().getAlternatives()); }
		(rule__CsvOperation__Alternatives)
		{ after(grammarAccess.getCsvOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntOperation
entryRuleIntOperation
:
{ before(grammarAccess.getIntOperationRule()); }
	 ruleIntOperation
{ after(grammarAccess.getIntOperationRule()); } 
	 EOF 
;

// Rule IntOperation
ruleIntOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntOperationAccess().getAlternatives()); }
		(rule__IntOperation__Alternatives)
		{ after(grammarAccess.getIntOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssign
entryRuleAssign
:
{ before(grammarAccess.getAssignRule()); }
	 ruleAssign
{ after(grammarAccess.getAssignRule()); } 
	 EOF 
;

// Rule Assign
ruleAssign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignAccess().getAlternatives()); }
		(rule__Assign__Alternatives)
		{ after(grammarAccess.getAssignAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSave
entryRuleSave
:
{ before(grammarAccess.getSaveRule()); }
	 ruleSave
{ after(grammarAccess.getSaveRule()); } 
	 EOF 
;

// Rule Save
ruleSave 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSaveAccess().getGroup()); }
		(rule__Save__Group__0)
		{ after(grammarAccess.getSaveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrint
entryRulePrint
:
{ before(grammarAccess.getPrintRule()); }
	 rulePrint
{ after(grammarAccess.getPrintRule()); } 
	 EOF 
;

// Rule Print
rulePrint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintAccess().getGroup()); }
		(rule__Print__Group__0)
		{ after(grammarAccess.getPrintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoad
entryRuleLoad
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadAccess().getGroup()); }
		(rule__Load__Group__0)
		{ after(grammarAccess.getLoadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProduct
entryRuleProduct
:
{ before(grammarAccess.getProductRule()); }
	 ruleProduct
{ after(grammarAccess.getProductRule()); } 
	 EOF 
;

// Rule Product
ruleProduct 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductAccess().getGroup()); }
		(rule__Product__Group__0)
		{ after(grammarAccess.getProductAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirect
entryRuleDirect
:
{ before(grammarAccess.getDirectRule()); }
	 ruleDirect
{ after(grammarAccess.getDirectRule()); } 
	 EOF 
;

// Rule Direct
ruleDirect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectAccess().getValAssignment()); }
		(rule__Direct__ValAssignment)
		{ after(grammarAccess.getDirectAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDrop
entryRuleDrop
:
{ before(grammarAccess.getDropRule()); }
	 ruleDrop
{ after(grammarAccess.getDropRule()); } 
	 EOF 
;

// Rule Drop
ruleDrop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDropAccess().getGroup()); }
		(rule__Drop__Group__0)
		{ after(grammarAccess.getDropAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getAlternatives()); }
		(rule__Range__Alternatives)
		{ after(grammarAccess.getRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRowRange
entryRuleRowRange
:
{ before(grammarAccess.getRowRangeRule()); }
	 ruleRowRange
{ after(grammarAccess.getRowRangeRule()); } 
	 EOF 
;

// Rule RowRange
ruleRowRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowRangeAccess().getAlternatives()); }
		(rule__RowRange__Alternatives)
		{ after(grammarAccess.getRowRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColRange
entryRuleColRange
:
{ before(grammarAccess.getColRangeRule()); }
	 ruleColRange
{ after(grammarAccess.getColRangeRule()); } 
	 EOF 
;

// Rule ColRange
ruleColRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColRangeAccess().getAlternatives()); }
		(rule__ColRange__Alternatives)
		{ after(grammarAccess.getColRangeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCsv_variable
entryRuleCsv_variable
:
{ before(grammarAccess.getCsv_variableRule()); }
	 ruleCsv_variable
{ after(grammarAccess.getCsv_variableRule()); } 
	 EOF 
;

// Rule Csv_variable
ruleCsv_variable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCsv_variableAccess().getNameAssignment()); }
		(rule__Csv_variable__NameAssignment)
		{ after(grammarAccess.getCsv_variableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInt_variable
entryRuleInt_variable
:
{ before(grammarAccess.getInt_variableRule()); }
	 ruleInt_variable
{ after(grammarAccess.getInt_variableRule()); } 
	 EOF 
;

// Rule Int_variable
ruleInt_variable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt_variableAccess().getNameAssignment()); }
		(rule__Int_variable__NameAssignment)
		{ after(grammarAccess.getInt_variableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getAssignParserRuleCall_0()); }
		ruleAssign
		{ after(grammarAccess.getStatementAccess().getAssignParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getPrintParserRuleCall_1()); }
		rulePrint
		{ after(grammarAccess.getStatementAccess().getPrintParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSaveParserRuleCall_2()); }
		ruleSave
		{ after(grammarAccess.getStatementAccess().getSaveParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CsvOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCsvOperationAccess().getLoadParserRuleCall_0()); }
		ruleLoad
		{ after(grammarAccess.getCsvOperationAccess().getLoadParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCsvOperationAccess().getSelectParserRuleCall_1()); }
		ruleSelect
		{ after(grammarAccess.getCsvOperationAccess().getSelectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCsvOperationAccess().getDropParserRuleCall_2()); }
		ruleDrop
		{ after(grammarAccess.getCsvOperationAccess().getDropParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntOperationAccess().getSumParserRuleCall_0()); }
		ruleSum
		{ after(grammarAccess.getIntOperationAccess().getSumParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntOperationAccess().getProductParserRuleCall_1()); }
		ruleProduct
		{ after(grammarAccess.getIntOperationAccess().getProductParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntOperationAccess().getDirectParserRuleCall_2()); }
		ruleDirect
		{ after(grammarAccess.getIntOperationAccess().getDirectParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignAccess().getGroup_0()); }
		(rule__Assign__Group_0__0)
		{ after(grammarAccess.getAssignAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignAccess().getGroup_1()); }
		(rule__Assign__Group_1__0)
		{ after(grammarAccess.getAssignAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__ValAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintAccess().getValIntOperationParserRuleCall_2_0_0()); }
		ruleIntOperation
		{ after(grammarAccess.getPrintAccess().getValIntOperationParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrintAccess().getValInt_variableParserRuleCall_2_0_1()); }
		ruleInt_variable
		{ after(grammarAccess.getPrintAccess().getValInt_variableParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getRowRangeParserRuleCall_0()); }
		ruleRowRange
		{ after(grammarAccess.getRangeAccess().getRowRangeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getColRangeParserRuleCall_1()); }
		ruleColRange
		{ after(grammarAccess.getRangeAccess().getColRangeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowRangeAccess().getGroup_0()); }
		(rule__RowRange__Group_0__0)
		{ after(grammarAccess.getRowRangeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRowRangeAccess().getGroup_1()); }
		(rule__RowRange__Group_1__0)
		{ after(grammarAccess.getRowRangeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColRangeAccess().getGroup_0()); }
		(rule__ColRange__Group_0__0)
		{ after(grammarAccess.getColRangeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getColRangeAccess().getGroup_1()); }
		(rule__ColRange__Group_1__0)
		{ after(grammarAccess.getColRangeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_0__0__Impl
	rule__Assign__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getValAssignment_0_0()); }
	(rule__Assign__ValAssignment_0_0)
	{ after(grammarAccess.getAssignAccess().getValAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_0__1__Impl
	rule__Assign__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getAssignAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getOpAssignment_0_2()); }
	(rule__Assign__OpAssignment_0_2)
	{ after(grammarAccess.getAssignAccess().getOpAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_1__0__Impl
	rule__Assign__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getVarAssignment_1_0()); }
	(rule__Assign__VarAssignment_1_0)
	{ after(grammarAccess.getAssignAccess().getVarAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_1__1__Impl
	rule__Assign__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getAssignAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getOpAssignment_1_2()); }
	(rule__Assign__OpAssignment_1_2)
	{ after(grammarAccess.getAssignAccess().getOpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Save__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__0__Impl
	rule__Save__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getSaveKeyword_0()); }
	'Save'
	{ after(grammarAccess.getSaveAccess().getSaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__1__Impl
	rule__Save__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSaveAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__2__Impl
	rule__Save__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getDeclared_csvAssignment_2()); }
	(rule__Save__Declared_csvAssignment_2)
	{ after(grammarAccess.getSaveAccess().getDeclared_csvAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__3__Impl
	rule__Save__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getSaveAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__4__Impl
	rule__Save__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getFilenameAssignment_4()); }
	(rule__Save__FilenameAssignment_4)
	{ after(grammarAccess.getSaveAccess().getFilenameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSaveAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Print__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__0__Impl
	rule__Print__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getPrintKeyword_0()); }
	'Print'
	{ after(grammarAccess.getPrintAccess().getPrintKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__1__Impl
	rule__Print__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPrintAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__2__Impl
	rule__Print__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getValAssignment_2()); }
	(rule__Print__ValAssignment_2)
	{ after(grammarAccess.getPrintAccess().getValAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Print__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPrintAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__0__Impl
	rule__Load__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getOpenKeyword_0()); }
	'Open'
	{ after(grammarAccess.getLoadAccess().getOpenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__1__Impl
	rule__Load__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLoadAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__2__Impl
	rule__Load__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getFilenameAssignment_2()); }
	(rule__Load__FilenameAssignment_2)
	{ after(grammarAccess.getLoadAccess().getFilenameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getLoadAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getVarAssignment_0()); }
	(rule__Sum__VarAssignment_0)
	{ after(grammarAccess.getSumAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
	rule__Sum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSumAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__2__Impl
	rule__Sum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getSumKeyword_2()); }
	'Sum'
	{ after(grammarAccess.getSumAccess().getSumKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__3__Impl
	rule__Sum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getSumAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__4__Impl
	rule__Sum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getSelectionAssignment_4()); }
	(rule__Sum__SelectionAssignment_4)
	{ after(grammarAccess.getSumAccess().getSelectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getSumAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Product__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__0__Impl
	rule__Product__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getVarAssignment_0()); }
	(rule__Product__VarAssignment_0)
	{ after(grammarAccess.getProductAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__1__Impl
	rule__Product__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getProductAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__2__Impl
	rule__Product__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getProductKeyword_2()); }
	'Product'
	{ after(grammarAccess.getProductAccess().getProductKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__3__Impl
	rule__Product__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getProductAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__4__Impl
	rule__Product__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getSelectionAssignment_4()); }
	(rule__Product__SelectionAssignment_4)
	{ after(grammarAccess.getProductAccess().getSelectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Product__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getProductAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getNewCsvAssignment_0()); }
	(rule__Select__NewCsvAssignment_0)
	{ after(grammarAccess.getSelectAccess().getNewCsvAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSelectAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCsv_varAssignment_2()); }
	(rule__Select__Csv_varAssignment_2)
	{ after(grammarAccess.getSelectAccess().getCsv_varAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_3()); }
	'.select'
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getSelectAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__5__Impl
	rule__Select__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getRangeAssignment_5()); }
	(rule__Select__RangeAssignment_5)
	{ after(grammarAccess.getSelectAccess().getRangeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getSelectAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Drop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__0__Impl
	rule__Drop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getNewCsvAssignment_0()); }
	(rule__Drop__NewCsvAssignment_0)
	{ after(grammarAccess.getDropAccess().getNewCsvAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__1__Impl
	rule__Drop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDropAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__2__Impl
	rule__Drop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getCsv_varAssignment_2()); }
	(rule__Drop__Csv_varAssignment_2)
	{ after(grammarAccess.getDropAccess().getCsv_varAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__3__Impl
	rule__Drop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getDropKeyword_3()); }
	'.drop'
	{ after(grammarAccess.getDropAccess().getDropKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__4__Impl
	rule__Drop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getDropAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__5__Impl
	rule__Drop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getRangeAssignment_5()); }
	(rule__Drop__RangeAssignment_5)
	{ after(grammarAccess.getDropAccess().getRangeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Drop__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDropAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getDropAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RowRange__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowRange__Group_0__0__Impl
	rule__RowRange__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowRangeAccess().getRowKeyword_0_0()); }
	'Row:'
	{ after(grammarAccess.getRowRangeAccess().getRowKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowRange__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowRangeAccess().getRowAssignment_0_1()); }
	(rule__RowRange__RowAssignment_0_1)
	{ after(grammarAccess.getRowRangeAccess().getRowAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RowRange__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowRange__Group_1__0__Impl
	rule__RowRange__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowRangeAccess().getRowsKeyword_1_0()); }
	'Rows:'
	{ after(grammarAccess.getRowRangeAccess().getRowsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowRange__Group_1__1__Impl
	rule__RowRange__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowRangeAccess().getRowStartAssignment_1_1()); }
	(rule__RowRange__RowStartAssignment_1_1)
	{ after(grammarAccess.getRowRangeAccess().getRowStartAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowRange__Group_1__2__Impl
	rule__RowRange__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowRangeAccess().getHyphenMinusKeyword_1_2()); }
	'-'
	{ after(grammarAccess.getRowRangeAccess().getHyphenMinusKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RowRange__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowRangeAccess().getRowEndAssignment_1_3()); }
	(rule__RowRange__RowEndAssignment_1_3)
	{ after(grammarAccess.getRowRangeAccess().getRowEndAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColRange__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRange__Group_0__0__Impl
	rule__ColRange__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRangeAccess().getColumnKeyword_0_0()); }
	'Column:'
	{ after(grammarAccess.getColRangeAccess().getColumnKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRange__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRangeAccess().getColumnAssignment_0_1()); }
	(rule__ColRange__ColumnAssignment_0_1)
	{ after(grammarAccess.getColRangeAccess().getColumnAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColRange__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRange__Group_1__0__Impl
	rule__ColRange__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRangeAccess().getColumnsKeyword_1_0()); }
	'Columns:'
	{ after(grammarAccess.getColRangeAccess().getColumnsKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRange__Group_1__1__Impl
	rule__ColRange__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRangeAccess().getColumnStartAssignment_1_1()); }
	(rule__ColRange__ColumnStartAssignment_1_1)
	{ after(grammarAccess.getColRangeAccess().getColumnStartAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRange__Group_1__2__Impl
	rule__ColRange__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRangeAccess().getHyphenMinusKeyword_1_2()); }
	'-'
	{ after(grammarAccess.getColRangeAccess().getHyphenMinusKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColRange__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColRangeAccess().getColumnEndAssignment_1_3()); }
	(rule__ColRange__ColumnEndAssignment_1_3)
	{ after(grammarAccess.getColRangeAccess().getColumnEndAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__StatementAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatementStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getModelAccess().getStatementStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__ValAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignAccess().getValCsv_variableParserRuleCall_0_0_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getAssignAccess().getValCsv_variableParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__OpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignAccess().getOpCsvOperationParserRuleCall_0_2_0()); }
		ruleCsvOperation
		{ after(grammarAccess.getAssignAccess().getOpCsvOperationParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__VarAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignAccess().getVarInt_variableParserRuleCall_1_0_0()); }
		ruleInt_variable
		{ after(grammarAccess.getAssignAccess().getVarInt_variableParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__OpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignAccess().getOpIntOperationParserRuleCall_1_2_0()); }
		ruleIntOperation
		{ after(grammarAccess.getAssignAccess().getOpIntOperationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Declared_csvAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaveAccess().getDeclared_csvCsv_variableParserRuleCall_2_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getSaveAccess().getDeclared_csvCsv_variableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__FilenameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaveAccess().getFilenameSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getSaveAccess().getFilenameSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Print__ValAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintAccess().getValAlternatives_2_0()); }
		(rule__Print__ValAlternatives_2_0)
		{ after(grammarAccess.getPrintAccess().getValAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__FilenameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getFilenameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLoadAccess().getFilenameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getVarInt_variableParserRuleCall_0_0()); }
		ruleInt_variable
		{ after(grammarAccess.getSumAccess().getVarInt_variableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__SelectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getSelectionCsv_variableParserRuleCall_4_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getSumAccess().getSelectionCsv_variableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getVarInt_variableParserRuleCall_0_0()); }
		ruleInt_variable
		{ after(grammarAccess.getProductAccess().getVarInt_variableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Product__SelectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductAccess().getSelectionCsv_variableParserRuleCall_4_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getProductAccess().getSelectionCsv_variableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direct__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectAccess().getValINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getDirectAccess().getValINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__NewCsvAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getNewCsvCsv_variableParserRuleCall_0_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getSelectAccess().getNewCsvCsv_variableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Csv_varAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getCsv_varCsv_variableParserRuleCall_2_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getSelectAccess().getCsv_varCsv_variableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__RangeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getRangeRangeParserRuleCall_5_0()); }
		ruleRange
		{ after(grammarAccess.getSelectAccess().getRangeRangeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__NewCsvAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getNewCsvCsv_variableParserRuleCall_0_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getDropAccess().getNewCsvCsv_variableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__Csv_varAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getCsv_varCsv_variableParserRuleCall_2_0()); }
		ruleCsv_variable
		{ after(grammarAccess.getDropAccess().getCsv_varCsv_variableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Drop__RangeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDropAccess().getRangeRangeParserRuleCall_5_0()); }
		ruleRange
		{ after(grammarAccess.getDropAccess().getRangeRangeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__RowAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowRangeAccess().getRowINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRowRangeAccess().getRowINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__RowStartAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowRangeAccess().getRowStartINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getRowRangeAccess().getRowStartINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RowRange__RowEndAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowRangeAccess().getRowEndINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getRowRangeAccess().getRowEndINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__ColumnAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColRangeAccess().getColumnINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getColRangeAccess().getColumnINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__ColumnStartAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColRangeAccess().getColumnStartINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getColRangeAccess().getColumnStartINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColRange__ColumnEndAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColRangeAccess().getColumnEndINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getColRangeAccess().getColumnEndINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_variable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCsv_variableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getCsv_variableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_variable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_variableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getInt_variableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
